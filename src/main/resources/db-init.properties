DROP_TABLE_HOSPITAL_USER=DROP TABLE HOSPITAL_USER CASCADE CONSTRAINTS
DROP_TABLE_HOSPITAL_ROLE=DROP TABLE HOSPITAL_ROLE CASCADE CONSTRAINTS
DROP_TABLE_HOSPITAL_USER_ROLE=DROP TABLE HOSPITAL_USER_ROLE CASCADE CONSTRAINTS
DROP_TABLE_HOSPITAL_PRESCRIPTION=DROP TABLE HOSPITAL_PRESCRIPTION CASCADE CONSTRAINTS
DROP_TABLE_HOSPITAL_PATIENT=DROP TABLE HOSPITAL_PATIENT CASCADE CONSTRAINTS
DROP_TABLE_HOSPITAL_CONPRESC=DROP TABLE HOSPITAL_CONPRESC CASCADE CONSTRAINTS

DROP_SEQUENCE_HOSPITAL_USER=DROP SEQUENCE HOSPITAL_USER_SEQ
DROP_SEQUENCE_HOSPITAL_ROLE=DROP SEQUENCE HOSPITAL_ROLE_SEQ
DROP_SEQUENCE_HOSPITAL_PRESCRIPTION=DROP SEQUENCE HOSPITAL_PRESCRIPTION_SEQ
DROP_SEQUENCE_HOSPITAL_PATIENT=DROP SEQUENCE HOSPITAL_PATIENT_SEQ
DROP_SEQUENCE_HOSPITAL_CONPRESC=DROP SEQUENCE HOSPITAL_CONPRESC_SEQ

CREATE_TABLE_HOSPITAL_USER=\
CREATE TABLE HOSPITAL_USER (\
    ID NUMBER NOT NULL, \
    LOGIN VARCHAR(255) NOT NULL UNIQUE, \
    PASSWORD VARCHAR(255) NOT NULL, \
    NAME VARCHAR(255) NOT NULL, \
    ACTIVATED NUMBER(1) NOT NULL, \
    PRIMARY KEY (ID)\
)
CREATE_TABLE_HOSPITAL_ROLE=\
CREATE TABLE HOSPITAL_ROLE (\
    ID NUMBER NOT NULL, \
    NAME VARCHAR(255) NOT NULL UNIQUE, \
    PRIMARY KEY (ID)\
)
CREATE_TABLE_HOSPITAL_USER_ROLE=\
CREATE TABLE HOSPITAL_USER_ROLE (\
    USER_ID NUMBER NOT NULL, \
    ROLE_ID NUMBER NOT NULL\
)
CREATE_TABLE_HOSPITAL_PRESCRIPTION=\
CREATE TABLE HOSPITAL_PRESCRIPTION (\
    ID NUMBER NOT NULL, \
    NAME VARCHAR(255) NOT NULL UNIQUE, \
    PRIMARY KEY (ID)\
)
CREATE_TABLE_HOSPITAL_PATIENT=\
CREATE TABLE HOSPITAL_PATIENT (\
    ID NUMBER NOT NULL, \
    NAME VARCHAR(255) NOT NULL UNIQUE, \
    DIAGNOSIS VARCHAR(255) NOT NULL, \
    DISCHARGED NUMBER(1) NOT NULL, \
    PRIMARY KEY (ID)\
)
CREATE_TABLE_HOSPITAL_CONPRESC=\
CREATE TABLE HOSPITAL_CONPRESC (\
    ID NUMBER NOT NULL, \
    PRESCRIPTION_ID NUMBER NOT NULL, \
    PATIENT_ID NUMBER NOT NULL, \
    USER_ID NUMBER, \
    DESCRIPTION VARCHAR(255) NOT NULL, \
    PERFORMED NUMBER(1) NOT NULL, \
    PRIMARY KEY (ID)\
)

ALTER_TABLE_HOSPITAL_USER_ROLE_1=ALTER TABLE HOSPITAL_USER_ROLE ADD FOREIGN KEY (USER_ID) REFERENCES HOSPITAL_USER(ID)
ALTER_TABLE_HOSPITAL_USER_ROLE_2=ALTER TABLE HOSPITAL_USER_ROLE ADD FOREIGN KEY (ROLE_ID) REFERENCES HOSPITAL_ROLE(ID)
ALTER_TABLE_HOSPITAL_CONPRESC_1=ALTER TABLE HOSPITAL_CONPRESC ADD FOREIGN KEY (PRESCRIPTION_ID) REFERENCES HOSPITAL_PRESCRIPTION(ID)
ALTER_TABLE_HOSPITAL_CONPRESC_2=ALTER TABLE HOSPITAL_CONPRESC ADD FOREIGN KEY (PATIENT_ID) REFERENCES HOSPITAL_PATIENT(ID)
ALTER_TABLE_HOSPITAL_CONPRESC_3=ALTER TABLE HOSPITAL_CONPRESC ADD FOREIGN KEY (USER_ID) REFERENCES HOSPITAL_USER(ID)

CREATE_SEQUENCE_HOSPITAL_USER=CREATE SEQUENCE HOSPITAL_USER_SEQ
CREATE_SEQUENCE_HOSPITAL_ROLE=CREATE SEQUENCE HOSPITAL_ROLE_SEQ
CREATE_SEQUENCE_HOSPITAL_PRESCRIPTION=CREATE SEQUENCE HOSPITAL_PRESCRIPTION_SEQ
CREATE_SEQUENCE_HOSPITAL_PATIENT=CREATE SEQUENCE HOSPITAL_PATIENT_SEQ
CREATE_SEQUENCE_HOSPITAL_CONPRESC=CREATE SEQUENCE HOSPITAL_CONPRESC_SEQ

CREATE_TRIGGER_HOSPITAL_USER=\
CREATE OR REPLACE TRIGGER HOSPITAL_USER_BI \
            \nBEFORE INSERT ON HOSPITAL_USER\
            \nFOR EACH ROW\
            \nBEGIN\
            \n  SELECT HOSPITAL_USER_SEQ.NEXTVAL\
            \n  INTO   :new.ID\
            \n  FROM   dual;\
            \nEND;
CREATE_TRIGGER_HOSPITAL_ROLE=\
CREATE OR REPLACE TRIGGER HOSPITAL_ROLE_BI \
            \nBEFORE INSERT ON HOSPITAL_ROLE\
            \nFOR EACH ROW\
            \nBEGIN\
            \n  SELECT HOSPITAL_ROLE_SEQ.NEXTVAL\
            \n  INTO   :new.ID\
            \n  FROM   dual;\
            \nEND;
CREATE_TRIGGER_HOSPITAL_PRESCRIPTION=\
CREATE OR REPLACE TRIGGER HOSPITAL_PRESCRIPTION_BI \
            \nBEFORE INSERT ON HOSPITAL_PRESCRIPTION\
            \nFOR EACH ROW\
            \nBEGIN\
            \n  SELECT HOSPITAL_PRESCRIPTION_SEQ.NEXTVAL\
            \n  INTO   :new.ID\
            \n  FROM   dual;\
            \nEND;
CREATE_TRIGGER_HOSPITAL_PATIENT=\
CREATE OR REPLACE TRIGGER HOSPITAL_PATIENT_BI \
            \nBEFORE INSERT ON HOSPITAL_PATIENT\
            \nFOR EACH ROW\
            \nBEGIN\
            \n  SELECT HOSPITAL_PATIENT_SEQ.NEXTVAL\
            \n  INTO   :new.ID\
            \n  FROM   dual;\
            \nEND;
CREATE_TRIGGER_HOSPITAL_CONPRESC=\
CREATE OR REPLACE TRIGGER HOSPITAL_CONPRESC_BI \
            \nBEFORE INSERT ON HOSPITAL_CONPRESC\
            \nFOR EACH ROW\
            \nBEGIN\
            \n  SELECT HOSPITAL_CONPRESC_SEQ.NEXTVAL\
            \n  INTO   :new.ID\
            \n  FROM   dual;\
            \nEND;

HOSPITAL_USER_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_user_save(\
    \nnLOGIN IN HOSPITAL_USER.LOGIN%TYPE, \
    \nnPASSWORD IN HOSPITAL_USER.PASSWORD%TYPE, \
    \nnNAME IN HOSPITAL_USER.NAME%TYPE, \
    \nnACTIVATED IN HOSPITAL_USER.ACTIVATED%TYPE, \
    \nnID OUT HOSPITAL_USER.ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_USER (LOGIN, PASSWORD, NAME, ACTIVATED) VALUES (nLOGIN, nPASSWORD, nNAME, nACTIVATED);\
\n   SELECT MAX(ID) INTO nID FROM HOSPITAL_USER;\
\nEND;
HOSPITAL_USER_UPDATE=\
CREATE OR REPLACE PROCEDURE hospital_user_update(\
    \nnLOGIN IN HOSPITAL_USER.LOGIN%TYPE, \
    \nnPASSWORD IN HOSPITAL_USER.PASSWORD%TYPE, \
    \nnNAME IN HOSPITAL_USER.NAME%TYPE, \
    \nnACTIVATED IN HOSPITAL_USER.ACTIVATED%TYPE,\
    \nnID IN HOSPITAL_USER.ID%TYPE)\
\nAS\
\nBEGIN\
\n   UPDATE HOSPITAL_USER SET LOGIN=nLOGIN, PASSWORD=nPASSWORD, NAME=nNAME, ACTIVATED=nACTIVATED WHERE ID=nID;\
\nEND;
HOSPITAL_USER_DELETE=\
CREATE OR REPLACE PROCEDURE hospital_user_delete(\
    \nnID IN HOSPITAL_USER.ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_USER WHERE ID=nID;\
\nEND;
HOSPITAL_USER_GET_BY_ID=\
CREATE OR REPLACE PROCEDURE hospital_user_get_by_id(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnID IN HOSPITAL_USER.ID%TYPE)\
\nAS\
\nBEGIN\
\n   OPEN cursorParam FOR \
\n SELECT * FROM HOSPITAL_USER WHERE ID=nID;\
\nEND;
HOSPITAL_USER_GET_MANY=\
CREATE OR REPLACE PROCEDURE hospital_user_get_many(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnLOGIN IN HOSPITAL_USER.LOGIN%TYPE,\
    \nnACTIVATED IN HOSPITAL_USER.ACTIVATED%TYPE,\
    \nnROLE_ID IN HOSPITAL_USER_ROLE.ROLE_ID%TYPE, \
    \nnCNT IN NUMBER,\
    \nnLOW IN NUMBER) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT * FROM \
\n( SELECT a.*, ROWNUM rnum FROM \
\n  ( SELECT * FROM HOSPITAL_USER \
\n        WHERE (LOGIN=COALESCE(nLOGIN, LOGIN)) \
\n        AND (ACTIVATED=COALESCE(nACTIVATED, ACTIVATED)) \
\n        AND (ID IN (SELECT USER_ID FROM HOSPITAL_USER_ROLE WHERE ROLE_ID=nROLE_ID) OR nROLE_ID IS NULL)\
\n        ORDER BY ID ) a \
\n  WHERE ROWNUM < nCNT )\
\nWHERE rnum  >= nLOW;\
\nEND;
HOSPITAL_USER_INITIALIZE=\
CREATE OR REPLACE PROCEDURE hospital_user_initialize(\
    \ncursorParam OUT SYS_REFCURSOR, \
    \nnID IN HOSPITAL_USER.ID%TYPE) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT HOSPITAL_ROLE.ID, HOSPITAL_ROLE.NAME FROM \
                HOSPITAL_ROLE INNER JOIN HOSPITAL_USER_ROLE ON \
                HOSPITAL_ROLE.ID = HOSPITAL_USER_ROLE.ROLE_ID \
                WHERE HOSPITAL_USER_ROLE.USER_ID=nID;\
\nEND;

HOSPITAL_ROLE_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_role_save(\
    \nnNAME IN HOSPITAL_ROLE.NAME%TYPE, \
    \nnID OUT HOSPITAL_ROLE.ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_ROLE (NAME) VALUES (nNAME);\
\n   SELECT MAX(ID) INTO nID FROM HOSPITAL_ROLE;\
\nEND;
HOSPITAL_ROLE_UPDATE=\
CREATE OR REPLACE PROCEDURE hospital_role_update(\
    \nnNAME IN HOSPITAL_ROLE.NAME%TYPE, \
    \nnID IN HOSPITAL_ROLE.ID%TYPE)\
\nAS\
\nBEGIN\
\n   UPDATE HOSPITAL_ROLE SET NAME=nNAME WHERE ID=nID;\
\nEND;
HOSPITAL_ROLE_DELETE=\
CREATE OR REPLACE PROCEDURE hospital_role_delete(\
    \nnID IN HOSPITAL_ROLE.ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_ROLE WHERE ID=nID;\
\nEND;
HOSPITAL_ROLE_GET_BY_ID=\
CREATE OR REPLACE PROCEDURE hospital_role_get_by_id(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnID IN HOSPITAL_ROLE.ID%TYPE)\
\nAS\
\nBEGIN\
\n   OPEN cursorParam FOR \
\n SELECT * FROM HOSPITAL_ROLE WHERE ID=nID;\
\nEND;
HOSPITAL_ROLE_GET_MANY=\
CREATE OR REPLACE PROCEDURE hospital_role_get_many(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnNAME IN HOSPITAL_ROLE.NAME%TYPE,\
    \nnUSER_ID IN HOSPITAL_USER_ROLE.USER_ID%TYPE, \
    \nnCNT IN NUMBER,\
    \nnLOW IN NUMBER) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT * FROM \
\n( SELECT a.*, ROWNUM rnum FROM \
\n  ( SELECT * FROM HOSPITAL_ROLE \
\n        WHERE (NAME=COALESCE(nNAME, NAME)) \
\n        AND (ID IN (SELECT ROLE_ID FROM HOSPITAL_USER_ROLE WHERE USER_ID=nUSER_ID) OR nUSER_ID IS NULL)\
\n        ORDER BY ID ) a \
\n  WHERE ROWNUM < nCNT )\
\nWHERE rnum  >= nLOW;\
\nEND;

HOSPITAL_USER_ROLE_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_u_r_save(\
    \nnUSER_ID IN HOSPITAL_USER_ROLE.USER_ID%TYPE, \
    \nnROLE_ID IN HOSPITAL_USER_ROLE.ROLE_ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_USER_ROLE (USER_ID, ROLE_ID) VALUES (nUSER_ID, nROLE_ID);\
\nEND;
HOSPITAL_USER_ROLE_DELETE_BY_USER=\
CREATE OR REPLACE PROCEDURE hospital_u_r_delete_by_user(\
    \nnUSER_ID IN HOSPITAL_USER_ROLE.USER_ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_USER_ROLE WHERE USER_ID=nUSER_ID;\
\nEND;
HOSPITAL_USER_ROLE_DELETE_BY_ROLE=\
CREATE OR REPLACE PROCEDURE hospital_u_r_delete_by_role(\
    \nnROLE_ID IN HOSPITAL_USER_ROLE.ROLE_ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_USER_ROLE WHERE ROLE_ID=nROLE_ID;\
\nEND;

HOSPITAL_PRESCRIPTION_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_presc_save(\
    \nnNAME IN HOSPITAL_PRESCRIPTION.NAME%TYPE, \
    \nnID OUT HOSPITAL_PRESCRIPTION.ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_PRESCRIPTION (NAME) VALUES (nNAME);\
\n   SELECT MAX(ID) INTO nID FROM HOSPITAL_PRESCRIPTION;\
\nEND;
HOSPITAL_PRESCRIPTION_UPDATE=\
CREATE OR REPLACE PROCEDURE hospital_presc_update(\
    \nnNAME IN HOSPITAL_PRESCRIPTION.NAME%TYPE, \
    \nnID IN HOSPITAL_PRESCRIPTION.ID%TYPE)\
\nAS\
\nBEGIN\
\n   UPDATE HOSPITAL_PRESCRIPTION SET NAME=nNAME WHERE ID=nID;\
\nEND;
HOSPITAL_PRESCRIPTION_DELETE=\
CREATE OR REPLACE PROCEDURE hospital_presc_delete(\
    \nnID IN HOSPITAL_PRESCRIPTION.ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_PRESCRIPTION WHERE ID=nID;\
\nEND;
HOSPITAL_PRESCRIPTION_GET_BY_ID=\
CREATE OR REPLACE PROCEDURE hospital_presc_get_by_id(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnID IN HOSPITAL_PRESCRIPTION.ID%TYPE)\
\nAS\
\nBEGIN\
\n   OPEN cursorParam FOR \
\n SELECT * FROM HOSPITAL_PRESCRIPTION WHERE ID=nID;\
\nEND;
HOSPITAL_PRESCRIPTION_GET_MANY=\
CREATE OR REPLACE PROCEDURE hospital_presc_get_many(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnNAME IN HOSPITAL_PRESCRIPTION.NAME%TYPE,\
    \nnCNT IN NUMBER,\
    \nnLOW IN NUMBER) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT * FROM \
\n( SELECT a.*, ROWNUM rnum FROM \
\n  ( SELECT * FROM HOSPITAL_PRESCRIPTION \
\n        WHERE (NAME=COALESCE(nNAME, NAME)) \
\n        ORDER BY ID ) a \
\n  WHERE ROWNUM < nCNT )\
\nWHERE rnum  >= nLOW;\
\nEND;

HOSPITAL_PATIENT_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_patient_save(\
    \nnNAME IN HOSPITAL_PATIENT.NAME%TYPE, \
    \nnDIAGNOSIS IN HOSPITAL_PATIENT.DIAGNOSIS%TYPE, \
    \nnDISCHARGED IN HOSPITAL_PATIENT.DISCHARGED%TYPE, \
    \nnID OUT HOSPITAL_PATIENT.ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_PATIENT (NAME, DIAGNOSIS, DISCHARGED) VALUES (nNAME, nDIAGNOSIS, nDISCHARGED);\
\n   SELECT MAX(ID) INTO nID FROM HOSPITAL_PATIENT;\
\nEND;
HOSPITAL_PATIENT_UPDATE=\
CREATE OR REPLACE PROCEDURE hospital_patient_update(\
    \nnNAME IN HOSPITAL_PATIENT.NAME%TYPE, \
    \nnDIAGNOSIS IN HOSPITAL_PATIENT.DIAGNOSIS%TYPE, \
    \nnDISCHARGED IN HOSPITAL_PATIENT.DISCHARGED%TYPE,\
    \nnID IN HOSPITAL_PATIENT.ID%TYPE)\
\nAS\
\nBEGIN\
\n   UPDATE HOSPITAL_PATIENT SET NAME=nNAME, DIAGNOSIS=nDIAGNOSIS, DISCHARGED=nDISCHARGED WHERE ID=nID;\
\nEND;
HOSPITAL_PATIENT_DELETE=\
CREATE OR REPLACE PROCEDURE hospital_patient_delete(\
    \nnID IN HOSPITAL_PATIENT.ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_PATIENT WHERE ID=nID;\
\nEND;
HOSPITAL_PATIENT_GET_BY_ID=\
CREATE OR REPLACE PROCEDURE hospital_patient_get_by_id(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnID IN HOSPITAL_PATIENT.ID%TYPE)\
\nAS\
\nBEGIN\
\n   OPEN cursorParam FOR \
\n SELECT * FROM HOSPITAL_PATIENT WHERE ID=nID;\
\nEND;
HOSPITAL_PATIENT_GET_MANY=\
CREATE OR REPLACE PROCEDURE hospital_patient_get_many(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnNAME IN HOSPITAL_PATIENT.NAME%TYPE,\
    \nnDISCHARGED IN HOSPITAL_PATIENT.DISCHARGED%TYPE,\
    \nnCNT IN NUMBER,\
    \nnLOW IN NUMBER) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT * FROM \
\n( SELECT a.*, ROWNUM rnum FROM \
\n  ( SELECT * FROM HOSPITAL_PATIENT \
\n        WHERE (NAME=COALESCE(nNAME, NAME)) \
\n        AND (DISCHARGED=COALESCE(nDISCHARGED, DISCHARGED)) \
\n        ORDER BY ID ) a \
\n  WHERE ROWNUM < nCNT )\
\nWHERE rnum  >= nLOW;\
\nEND;

HOSPITAL_CONPRESC_SAVE=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_save(\
    \nnPRESCRIPTION_ID IN HOSPITAL_PRESCRIPTION.ID%TYPE, \
    \nnPATIENT_ID IN HOSPITAL_PATIENT.ID%TYPE, \
    \nnUSER_ID IN HOSPITAL_USER.ID%TYPE, \
    \nnDESCRIPTION IN HOSPITAL_CONPRESC.DESCRIPTION%TYPE, \
    \nnPERFORMED IN HOSPITAL_CONPRESC.PERFORMED%TYPE,\
    \nnID OUT HOSPITAL_CONPRESC.ID%TYPE)\
\nAS\
\nBEGIN\
\n   INSERT INTO HOSPITAL_CONPRESC (PRESCRIPTION_ID, PATIENT_ID, USER_ID, DESCRIPTION, PERFORMED) \
VALUES (nPRESCRIPTION_ID, nPATIENT_ID, nUSER_ID, nDESCRIPTION, nPerformed);\
\n   SELECT MAX(ID) INTO nID FROM HOSPITAL_CONPRESC;\
\nEND;
HOSPITAL_CONPRESC_UPDATE=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_update(\
    \nnPRESCRIPTION_ID IN HOSPITAL_PRESCRIPTION.ID%TYPE, \
    \nnPATIENT_ID IN HOSPITAL_PATIENT.ID%TYPE, \
    \nnUSER_ID IN HOSPITAL_USER.ID%TYPE, \
    \nnDESCRIPTION IN HOSPITAL_CONPRESC.DESCRIPTION%TYPE, \
    \nnPERFORMED IN HOSPITAL_CONPRESC.PERFORMED%TYPE, \
    \nnID IN HOSPITAL_CONPRESC.ID%TYPE)\
\nAS\
\nBEGIN\
\n   UPDATE HOSPITAL_CONPRESC \
                SET PRESCRIPTION_ID=nPRESCRIPTION_ID, PATIENT_ID=nPATIENT_ID, \
                USER_ID=nUSER_ID, DESCRIPTION=nDESCRIPTION, \
                PERFORMED=nPERFORMED WHERE ID=nID;\
\nEND;
HOSPITAL_CONPRESC_DELETE=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_delete(\
    \nnID IN HOSPITAL_CONPRESC.ID%TYPE)\
\nAS\
\nBEGIN\
\n   DELETE FROM HOSPITAL_CONPRESC WHERE ID=nID;\
\nEND;
HOSPITAL_CONPRESC_GET_BY_ID=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_get_by_id(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnID IN HOSPITAL_CONPRESC.ID%TYPE)\
\nAS\
\nBEGIN\
\n   OPEN cursorParam FOR \
\n SELECT * FROM HOSPITAL_CONPRESC WHERE ID=nID;\
\nEND;
HOSPITAL_CONPRESC_GET_MANY=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_get_many(\
    \ncursorParam OUT SYS_REFCURSOR,\
    \nnPATIENT_ID IN HOSPITAL_PATIENT.ID%TYPE, \
    \nnCNT IN NUMBER,\
    \nnLOW IN NUMBER) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT * FROM \
\n( SELECT a.*, ROWNUM rnum FROM \
\n  ( SELECT * FROM HOSPITAL_CONPRESC \
\n        WHERE (PATIENT_ID IN (SELECT ID FROM HOSPITAL_PATIENT WHERE ID=nPATIENT_ID) OR nPATIENT_ID IS NULL)\
\n        ORDER BY ID ) a \
\n  WHERE ROWNUM < nCNT )\
\nWHERE rnum  >= nLOW;\
\nEND;
HOSPITAL_CONPRESC_INITIALIZE=\
CREATE OR REPLACE PROCEDURE hospital_conpresc_initialize(\
    \ncursorParam OUT SYS_REFCURSOR, \
    \nnID IN HOSPITAL_CONPRESC.ID%TYPE) \
\nAS\
\nBEGIN\
\nOPEN cursorParam FOR \
\nSELECT HOSPITAL_CONPRESC.ID, HOSPITAL_CONPRESC.DESCRIPTION, HOSPITAL_CONPRESC.PERFORMED, \
                HOSPITAL_PRESCRIPTION.ID, HOSPITAL_PRESCRIPTION.NAME, \
                HOSPITAL_PATIENT.ID, HOSPITAL_PATIENT.NAME, HOSPITAL_PATIENT.DIAGNOSIS, HOSPITAL_PATIENT.DISCHARGED, \
                HOSPITAL_USER.ID, HOSPITAL_USER.NAME FROM \
                HOSPITAL_CONPRESC INNER JOIN HOSPITAL_PRESCRIPTION ON \
                HOSPITAL_CONPRESC.PRESCRIPTION_ID = HOSPITAL_PRESCRIPTION.ID \
                LEFT JOIN HOSPITAL_USER ON HOSPITAL_CONPRESC.USER_ID=HOSPITAL_USER.ID \
                INNER JOIN HOSPITAL_PATIENT ON HOSPITAL_CONPRESC.PATIENT_ID=HOSPITAL_PATIENT.ID \
                WHERE HOSPITAL_CONPRESC.ID=nID;\
\nEND;